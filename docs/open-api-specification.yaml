openapi: 3.0.3
info:
  title: Simple Ecommerce
  description: This is a RESTful API documentation.
  version: 1.0.0
servers:
  - url: http://localhost:8080
paths:
  /:
    get:
      tags:
        - Default
      summary: Root
      responses:
        200:
          $ref: "#/components/responses/200"
  /health:
    get:
      tags:
        - Default
      summary: Health Check
      responses:
        200:
          $ref: "#/components/responses/200"
        500:
          $ref: "#/components/responses/500"
  /auth/sign-in:
    post:
      tags:
        - Auth
      summary: Sign in
      requestBody:
        $ref: "#/components/requestBodies/authSignIn"
      responses:
        200:
          $ref: "#/components/responses/authSignIn"
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
  /auth/sign-out:
    delete:
      tags:
        - Auth
      summary: Sign out
      security:
        - authorize: []
      responses:
        200:
          $ref: "#/components/responses/200"
        401:
          $ref: "#/components/responses/401"
        500:
          $ref: "#/components/responses/500"
  /product:
    get:
      tags:
        - Product
      summary: List
      security:
        - authorize: []
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/limit"
      responses:
        200:
          $ref: "#/components/responses/productList"
        400:
          $ref: "#/components/responses/400"
        401:
          $ref: "#/components/responses/401"
        500:
          $ref: "#/components/responses/500"
    post:
      tags:
        - Product
      summary: Create Product
      security:
        - authorize: []
      requestBody:
        $ref: "#/components/requestBodies/productCreate"
      responses:
        200:
          $ref: "#/components/responses/200"
        400:
          $ref: "#/components/responses/400"
        401:
          $ref: "#/components/responses/401"
        500:
          $ref: "#/components/responses/500"    
components:
  securitySchemes:
    authorize:
      type: http
      scheme: bearer
  parameters:
    limit:
      in: query
      name: limit
      schema:
        type: integer
        default: 10
    page:
      in: query
      name: page
      schema:
        type: integer
        default: 1
  requestBodies:
    authSignIn:
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                default: ""
              password:
                type: string
                default: ""
                minLength: 8
    productCreate:
       content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                default: ""
              price:
                type: number
                default: 0
              description:
                type: string
                default: ""
  responses:
    200:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: string
                nullable: true
                default: null
              message:
                type: string
                default: OK
    400:
      description: Bad Request
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: string
                nullable: true
                default: null
              message:
                type: string
                default: Bad Request
    401:
      description: Unauthorized
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: string
                nullable: true
                default: null
              message:
                type: string
                default: Unauthorized
    500:
      description: Internal Server Error
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: string
                nullable: true
                default: null
              message:
                type: string
                default: Internal Server Error
    authSignIn:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  token:
                    type: string
                    default: ""
              message:
                type: string
                default: OK
    productList:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    description:
                      type: string
                      default: ""
                    id:
                      type: integer
                    name:
                      type: string
                      default: ""
                    price:
                      type: number
                      default: 0
                    created_at:
                      type: string
                      default: ""
              message:
                type: string
                default: OK
              page:
                type: object
                properties:
                  current:
                    type: integer
                  size:
                    type: integer
                  total:
                    type: integer